(()=>{"use strict";const t=class{constructor({name:t,link:e},s,n){this._name=t,this._link=e,this._template=s,this._handleCardClick=n}_getTemplateCard(){return document.querySelector(this._template).content.querySelector(".elements__element").cloneNode(!0)}_handleDelete(){this._newCard.remove(),this._newCard=null}_handleLikeCard(){this._likeButton.classList.toggle("description__vector_active")}_setEventListeners(){this._deleteCard=this._newCard.querySelector(".element__del"),this._deleteCard.addEventListener("click",(()=>this._handleDelete())),this._likeButton=this._newCard.querySelector(".description__vector"),this._likeButton.addEventListener("click",(()=>this._handleLikeCard())),this.link.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}_setData(){this._newCard.querySelector(".description__title").textContent=this._name,this.link=this._newCard.querySelector(".element__image"),this.link.src=this._link,this.link.alt=this._name}getView(){return this._newCard=this._getTemplateCard(),this._setData(),this._setEventListeners(),this._newCard}},e=class{constructor(t,e){this._formElement=t,this._config=e}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}_showInputError=t=>{const e=this._formElement.querySelector(`.${t.id}-error`);e.classList.add(this._config.errorClass),e.textContent=t.validationMessage,t.classList.add(this._config.inputErrorClass)};_hideInputError=t=>{const e=this._formElement.querySelector(`.${t.id}-error`);e.classList.remove(this._config.errorClass),e.textContent="",t.classList.remove(this._config.inputErrorClass)};_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.remove(this._config.activeButtonClass),this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.add(this._config.activeButtonClass),this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}};class s{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"==t.code&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("mousedown",(t=>{t.currentTarget===t.target&&this.close()}))}}class n extends s{constructor(t,e){super(t),this._handleFormSubmit=e,this._form=this._popup.querySelector(".popup__form"),this._inputList=Array.from(this._form.querySelectorAll(".popup__input"))}_getInputValues(){return this._formValues={},this._inputList.forEach((t=>{this._formValues[t.name]=t.value})),this._formValues}close(){super.close(),this._form.reset()}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const i={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-submit",activeButtonClass:"popup__button-submit_valid",inactiveButtonClass:"popup__button-submit_invalid",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},o=".elements",r=document.querySelector(".popup_type_edit-profile").querySelector("#editForm"),l=document.querySelector(".info__edit-button"),a=(document.querySelector(".info__title"),document.querySelector(".info__subtitle"),document.querySelector(".popup_type_add-card").querySelector("#addForm")),_=document.querySelector(".profile__add-button"),u=new class{constructor({renderer:t},e){this._renderer=t,this._container=document.querySelector(e)}renderItems(t){t.forEach((t=>{const e=this._renderer(t);this.addItem(e)}))}addItem(t){this._container.prepend(t)}}({renderer:d},o),c=new class extends s{constructor(t){super(t),this._popupImageImg=this._popup.querySelector(".popup__img"),this._popupImageTitle=this._popup.querySelector(".popup__img-title")}open(t,e){super.open(),this._popupImageImg.src=e,this._popupImageImg.alt=t,this._popupImageTitle.textContent=t}close(){super.close(),this._popupImageImg.src="",this._popupImageImg.alt="",this._popupImageTitle.textContent=""}}(".popup_type_img");c.setEventListeners();const p=new n(".popup_type_edit-profile",(function(t){m.setUserInfo(t.name,t.job),p.close()}));p.setEventListeners(),l.addEventListener("click",(()=>{const{name:t,job:e}=m.getUserInfo();p.setInputValues({name:t,job:e}),E.resetValidation(),p.open()}));const h=new n(".popup_type_add-card",(function(t){const e=d({name:t.pictureTitle,link:t.pictureLink});u.addItem(e),h.close()}));function d(e){return new t(e,"#element-template",f).getView()}h.setEventListeners(),_.addEventListener("click",(()=>{g.resetValidation(),h.open()}));const m=new class{constructor({name:t,job:e}){this._name=document.querySelector(t),this._job=document.querySelector(e)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(t,e){this._name.textContent=t,this._job.textContent=e}}({name:".info__title",job:".info__subtitle"});function f(t,e){c.open(t,e)}const E=new e(r,i);E.enableValidation(r);const g=new e(a,i);g.enableValidation(a),(new class{constructor(){}getCards(){return fetch("https://mesto.nomoreparties.co/v1/cohort-61/cards",{headers:{authorization:"3886a799-4854-4a3c-8a86-4cfa412e7d56"}}).then((t=>t.ok?t.json():Promise.reject(`Ошибка: ${t.status}`)))}}).getCards().then((t=>{o.append(u.renderItems(t))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,