(()=>{"use strict";const t=class{constructor({name:t,link:e},s,i){this._name=t,this._link=e,this._template=s,this._handleCardClick=i}_getTemplateCard(){return document.querySelector(this._template).content.querySelector(".elements__element").cloneNode(!0)}_handleDelete(){this._newCard.remove(),this._newCard=null}_handleLikeCard(){this._likeButton.classList.toggle("description__vector_active")}_setEventListeners(){this._deleteCard=this._newCard.querySelector(".element__del"),this._deleteCard.addEventListener("click",(()=>this._handleDelete())),this._likeButton=this._newCard.querySelector(".description__vector"),this._likeButton.addEventListener("click",(()=>this._handleLikeCard())),this.link.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}_setData(){this._newCard.querySelector(".description__title").textContent=this._name,this.link=this._newCard.querySelector(".element__image"),this.link.src=this._link,this.link.alt=this._name}getView(){return this._newCard=this._getTemplateCard(),this._setData(),this._setEventListeners(),this._newCard}},e=class{constructor(t,e){this._formElement=t,this._config=e}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}_showInputError=t=>{const e=this._formElement.querySelector(`.${t.id}-error`);e.classList.add(this._config.errorClass),e.textContent=t.validationMessage,t.classList.add(this._config.inputErrorClass)};_hideInputError=t=>{const e=this._formElement.querySelector(`.${t.id}-error`);e.classList.remove(this._config.errorClass),e.textContent="",t.classList.remove(this._config.inputErrorClass)};_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.remove(this._config.activeButtonClass),this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.add(this._config.activeButtonClass),this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}};class s{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened")}_handleEscClose(t){"Escape"==t.code&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("mousedown",(t=>{t.currentTarget===t.target&&this.close()}))}}class i extends s{constructor(t,e){super(t),this._handleFormSubmit=e,this._form=this._popup.querySelector(".popup__form"),this._inputList=Array.from(this._form.querySelectorAll(".popup__input"))}_getInputValues(){return this._formValues={},this._inputList.forEach((t=>{this._formValues[t.name]=t.value})),this._formValues}close(){this._popup.classList.remove("popup_opened"),this._form.reset()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const n={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-submit",activeButtonClass:"popup__button-submit_valid",inactiveButtonClass:"popup__button-submit_invalid",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},o=document.querySelector(".popup_type_edit-profile").querySelector("#editForm"),r=document.querySelector(".info__edit-button"),a=document.querySelector(".info__title"),l=document.querySelector(".info__subtitle"),p=document.querySelector(".popup_type_add-card").querySelector("#addForm"),u=document.querySelector(".profile__add-button"),_=new class{constructor({items:t,renderer:e},s){this._initialArray=t,this._renderer=e,this._container=document.querySelector(s)}renderItems(){this._initialArray.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Япония",link:"https://images.unsplash.com/photo-1490806843957-31f4c9a91c65?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Австралия",link:"https://images.unsplash.com/photo-1506973035872-a4ec16b8e8d9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Россия",link:"https://images.unsplash.com/photo-1547448415-e9f5b28e570d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"},{name:"Венеция",link:"https://images.unsplash.com/photo-1638707743318-6e9509cd3acc?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=464&q=80"},{name:"Франция",link:"https://images.unsplash.com/photo-1670945797773-616bb3a63359?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=435&q=80"},{name:"Грузия",link:"https://images.unsplash.com/photo-1626096762791-5cdb64c4363d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=435&q=80"}].reverse(),renderer:({name:e,link:s})=>{const i=new t({name:e,link:s},"#element-template",f).getView();_.addItem(i)}},".elements");_.renderItems();const c=new class extends s{constructor(t){super(t),this._popupImageImg=this._popup.querySelector(".popup__img"),this._popupImageTitle=this._popup.querySelector(".popup__img-title")}open(t,e){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupImageImg.src=e,this._popupImageImg.alt=t,this._popupImageTitle.textContent=t}close(){this._popup.classList.remove("popup_opened"),this._popupImageImg.src="",this._popupImageImg.alt="",this._popupImageTitle.textContent=""}}(".popup_type_img");c.setEventListeners();const d=new i(".popup_type_edit-profile",(function(t){m.setUserInfo(t.name,t.job),d.close()}));d.setEventListeners(),r.addEventListener("click",(()=>{const{name:t,job:e}=m.getUserInfo();a.value=t,l.value=e,b.resetValidation(),d.open()}));const h=new i(".popup_type_add-card",(function(e){const s=e.pictureTitle,i=e.pictureLink,n=new t({name:s,link:i},"#element-template",f);_.addItem(n.getView()),h.close()}));h.setEventListeners(),u.addEventListener("click",(()=>{g.resetValidation(),h.open()}));const m=new class{constructor({name:t,job:e}){this._name=document.querySelector(t),this._job=document.querySelector(e)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(t,e){this._name.textContent=t,this._job.textContent=e}}({name:".info__title",job:".info__subtitle"});function f(t,e){c.open(t,e)}const b=new e(o,n);b.enableValidation(o);const g=new e(p,n);g.enableValidation(p)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,